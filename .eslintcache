[{"C:\\Work\\React\\todo\\src\\index.js":"1","C:\\Work\\React\\todo\\src\\App.js":"2","C:\\Work\\React\\todo\\src\\reportWebVitals.js":"3","C:\\Work\\React\\todo\\src\\routes\\routes.js":"4","C:\\Work\\React\\todo\\src\\components\\Index.js":"5","C:\\Work\\React\\todo\\src\\helpers\\history.js":"6","C:\\Work\\React\\todo\\src\\components\\List.js":"7","C:\\Work\\React\\todo\\src\\components\\Form.js":"8"},{"size":500,"mtime":1606382723535,"results":"9","hashOfConfig":"10"},{"size":237,"mtime":1609219160573,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1606382723535,"results":"12","hashOfConfig":"10"},{"size":713,"mtime":1609304639139,"results":"13","hashOfConfig":"10"},{"size":352,"mtime":1609306169138,"results":"14","hashOfConfig":"10"},{"size":97,"mtime":1606719469722,"results":"15","hashOfConfig":"10"},{"size":1287,"mtime":1609306436661,"results":"16","hashOfConfig":"10"},{"size":4344,"mtime":1609306043354,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"6cj4m3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Work\\React\\todo\\src\\index.js",[],["40","41"],"C:\\Work\\React\\todo\\src\\App.js",["42","43"],"import React, { useState, useEffect } from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Routes from './routes/routes'\n\n\nconst App = () => {\n\n  return (\n      <Routes /> \n  )\n}\n\n\n\nexport default App;","C:\\Work\\React\\todo\\src\\reportWebVitals.js",[],"C:\\Work\\React\\todo\\src\\routes\\routes.js",["44","45","46"],"import React, { useState, useEffect } from \"react\";\r\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\nimport Index from \"../components/Index\";\r\nimport List from \"../components/List\";\r\nimport { history } from \"../helpers/history\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n      <Router history={history}>\r\n        <div>\r\n  \r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={\"/\"} component={Index} />\r\n              <Route exact path={\"/List\"} component={List} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  };\r\n\r\n  export default Routes;","C:\\Work\\React\\todo\\src\\components\\Index.js",["47","48","49","50","51","52","53"],"import React,{useState,useEffect} from \"react\";\r\nimport { InputGroup,FormControl,Button,Alert } from 'react-bootstrap';\r\nimport Todos from './List'\r\nimport Form from './Form'\r\n\r\nconst Index = (props) => {\r\nreturn (\r\n    <div className=\"col-md-12\">\r\n        <h1>To-Do List</h1>\r\n        \r\n        <Form/>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;","C:\\Work\\React\\todo\\src\\helpers\\history.js",[],"C:\\Work\\React\\todo\\src\\components\\List.js",["54","55","56","57","58","59","60"],"import React from \"react\";\r\nimport { InputGroup,FormControl,Button,Alert } from 'react-bootstrap';\r\n\r\n\r\nconst List = ({filteredtodoName,setFilteredTodoName,todoName,setTodoName}) => {\r\n  \r\n  const completeTodo = (e) => {\r\n        let updatedTodos = filteredtodoName.map(todo => {\r\n          if (todo.id == e.target.id) {\r\n            todo.status = !todo.status;\r\n          }\r\n          return todo;\r\n        });\r\n        setFilteredTodoName(updatedTodos);\r\n      };\r\n    \r\n    const removeTodo = (e) => {\r\n    const removedArr = [...todoName].filter(todo => todo.id != e.target.id );\r\n    setTodoName(removedArr);\r\n    \r\n  };\r\n\r\n  return (\r\n    <div style={{marginTop:\"6%\"}}>\r\n      {filteredtodoName.map((bucket)=>(<div style={{display:\"flex\",marginTop:\"2%\"}}>\r\n        <Alert key={\"1\"} style={{width:\"50%\"}} variant={bucket.status==1?\"success\":\"danger\"}>\r\n            {bucket.name}\r\n        </Alert>\r\n        <Button id={bucket.id} variant={bucket.status==1?\"danger\":\"success\"} onClick={completeTodo} style={{marginLeft:\"2%\"}}>{bucket.status==1?\"Incomplete\":\"Complete\"}\r\n        </Button>\r\n        <Button variant=\"danger\" id={bucket.id}  onClick={removeTodo} style={{marginLeft:\"2%\"}}>\r\n            Delete\r\n        </Button>\r\n    </div>))} \r\n  </div>\r\n  );\r\n};\r\n\r\nexport default List;","C:\\Work\\React\\todo\\src\\components\\Form.js",["61","62","63","64","65"],"import React,{useState,useEffect} from \"react\";\r\nimport { InputGroup,FormControl,Button,Alert } from 'react-bootstrap';\r\nimport Todos from './List'\r\n\r\nconst Form = (props) => {\r\n    useEffect(()=>{\r\n        getLocalData()\r\n        getLocalTodos()\r\n    },[])\r\n    const[bucketName,setBucketName]=useState([])\r\n    const[inputBucketText,setInputBucketText]=useState(\"\")\r\n    const[selectedBucket,setSelectedBucket]=useState(\"\")\r\n    const[todoName,setTodoName]=useState([])\r\n    const[filteredtodoName,setFilteredTodoName]=useState([])\r\n    const[inputTodoText,setInputTodoText]=useState(\"\")\r\n    const inputBucketTextHandler=(e)=>{\r\n        setInputBucketText(e.target.value)\r\n    }\r\n    const bucketTextHandler=(e)=>{\r\n        setBucketName([...bucketName,{id:parseInt(Math.random()*1000) ,\"name\":inputBucketText}])\r\n        if(bucketName.length < 1 ){\r\n            setSelectedBucket(inputBucketText)\r\n        }\r\n        setInputBucketText(\"\")\r\n    }\r\n\r\n    const selectedBucketChangeHandler=(e)=>{\r\n        console.log(\"changed\")\r\n        setSelectedBucket(e.target.value)\r\n    }\r\n\r\n   useEffect(() => {\r\n       console.log(\"bucketname:\",typeof(bucketName))\r\n        localStorage.setItem(\"buckets\", JSON.stringify(bucketName))\r\n      }, [bucketName]);\r\n    \r\n    useEffect(() => {\r\n        console.log(\"called\",selectedBucket)\r\n        const filteredTodos = [...todoName].filter(todo => todo.bucket == selectedBucket);\r\n        console.log(\"filtered todos\",filteredTodos)\r\n        setFilteredTodoName(filteredTodos);\r\n      }, [selectedBucket]);\r\n\r\n    const inputTodoTextHandler=(e)=>{\r\n        setInputTodoText(e.target.value)\r\n    }\r\n    const todoTextHandler=(e)=>{\r\n        setTodoName([...todoName,{id:parseInt(Math.random()*1000) ,\"name\":inputTodoText,\"bucket\":selectedBucket,\"status\":0}])\r\n        setFilteredTodoName([...filteredtodoName,{id:parseInt(Math.random()*1000) ,\"name\":inputTodoText,\"bucket\":selectedBucket,\"status\":0}])\r\n        setInputTodoText(\"\")\r\n    }\r\n\r\n    useEffect(() => {\r\n         localStorage.setItem(\"todos\", JSON.stringify(todoName))\r\n         console.log(\"todoname\",todoName)\r\n         const removedArr = [...todoName].filter(todo => todo.bucket == selectedBucket);\r\n         setFilteredTodoName(removedArr);\r\n       }, [todoName]);\r\n  \r\n\r\n    const getLocalData=(e)=>{\r\n        if(localStorage.getItem(\"buckets\")==null){\r\n            console.log(\"null bucker\")\r\n            setBucketName([])\r\n        }\r\n        else{\r\n            console.log(\"not null bucker\",JSON.parse(localStorage.getItem(\"buckets\"))[0].name)\r\n            setBucketName(JSON.parse(localStorage.getItem(\"buckets\")))\r\n            setSelectedBucket(JSON.parse(localStorage.getItem(\"buckets\"))[0].name)\r\n        }\r\n    }\r\n\r\n    const getLocalTodos=(e)=>{\r\n        if(localStorage.getItem(\"todos\")==null){\r\n            setTodoName([])\r\n        }\r\n        else{\r\n            setTodoName(JSON.parse(localStorage.getItem(\"todos\")))\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n        <div style={{width:\"50%\",margin:\"2%\"}}>\r\n        <InputGroup size=\"sm\" className=\"mb-2\">\r\n            <FormControl value={inputBucketText} onChange={inputBucketTextHandler}  style={{marginLeft:\"2%\"}} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n            <Button variant=\"warning\" onClick={bucketTextHandler} style={{marginLeft:\"2%\"}}>Add Bucket</Button>\r\n        </InputGroup>\r\n        \r\n        </div>\r\n      <div style={{width:\"50%\",margin:\"2%\"}}>\r\n          \r\n        <InputGroup size=\"sm\" className=\"mb-2\">\r\n        <FormControl as=\"select\" onChange={selectedBucketChangeHandler} custom>\r\n            <option disabled >---Select Bucket---</option>\r\n            {bucketName.map((bucket)=>(<option key={bucket.id} id={bucket.id}>{bucket.name}</option>))}\r\n        </FormControl>\r\n            <FormControl value={inputTodoText} onChange={inputTodoTextHandler} style={{marginLeft:\"2%\"}} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n            <Button variant=\"warning\" onClick={todoTextHandler} style={{marginLeft:\"2%\"}}>Add To Do</Button>\r\n        </InputGroup>\r\n        \r\n        </div>\r\n\r\n        <Todos filteredtodoName={filteredtodoName} setFilteredTodoName={setFilteredTodoName} todoName={todoName} setTodoName={setTodoName}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":25},{"ruleId":"70","severity":1,"message":"74","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":25},{"ruleId":"70","severity":1,"message":"74","line":1,"column":27,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"75","line":2,"column":33,"nodeType":"72","messageId":"73","endLine":2,"endColumn":37},{"ruleId":"70","severity":1,"message":"71","line":1,"column":15,"nodeType":"72","messageId":"73","endLine":1,"endColumn":23},{"ruleId":"70","severity":1,"message":"74","line":1,"column":24,"nodeType":"72","messageId":"73","endLine":1,"endColumn":33},{"ruleId":"70","severity":1,"message":"76","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":20},{"ruleId":"70","severity":1,"message":"77","line":2,"column":21,"nodeType":"72","messageId":"73","endLine":2,"endColumn":32},{"ruleId":"70","severity":1,"message":"78","line":2,"column":33,"nodeType":"72","messageId":"73","endLine":2,"endColumn":39},{"ruleId":"70","severity":1,"message":"79","line":2,"column":40,"nodeType":"72","messageId":"73","endLine":2,"endColumn":45},{"ruleId":"70","severity":1,"message":"80","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":13},{"ruleId":"70","severity":1,"message":"76","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":20},{"ruleId":"70","severity":1,"message":"77","line":2,"column":21,"nodeType":"72","messageId":"73","endLine":2,"endColumn":32},{"ruleId":"81","severity":1,"message":"82","line":9,"column":23,"nodeType":"83","messageId":"84","endLine":9,"endColumn":25},{"ruleId":"81","severity":1,"message":"85","line":18,"column":61,"nodeType":"83","messageId":"84","endLine":18,"endColumn":63},{"ruleId":"81","severity":1,"message":"82","line":26,"column":70,"nodeType":"83","messageId":"84","endLine":26,"endColumn":72},{"ruleId":"81","severity":1,"message":"82","line":29,"column":54,"nodeType":"83","messageId":"84","endLine":29,"endColumn":56},{"ruleId":"81","severity":1,"message":"82","line":29,"column":141,"nodeType":"83","messageId":"84","endLine":29,"endColumn":143},{"ruleId":"70","severity":1,"message":"79","line":2,"column":40,"nodeType":"72","messageId":"73","endLine":2,"endColumn":45},{"ruleId":"81","severity":1,"message":"82","line":39,"column":72,"nodeType":"83","messageId":"84","endLine":39,"endColumn":74},{"ruleId":"86","severity":1,"message":"87","line":42,"column":10,"nodeType":"88","endLine":42,"endColumn":26,"suggestions":"89"},{"ruleId":"81","severity":1,"message":"82","line":56,"column":70,"nodeType":"83","messageId":"84","endLine":56,"endColumn":72},{"ruleId":"86","severity":1,"message":"90","line":58,"column":11,"nodeType":"88","endLine":58,"endColumn":21,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'Alert' is defined but never used.","'Todos' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'todoName'. Either include it or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has a missing dependency: 'selectedBucket'. Either include it or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"96","fix":"98"},"Update the dependencies array to be: [selectedBucket, todoName]",{"range":"99","text":"100"},{"range":"101","text":"100"},[1528,1544],"[selectedBucket, todoName]",[2256,2266]]
{"version":3,"sources":["components/List.js","components/Index.js","helpers/history.js","routes/routes.js","App.js","reportWebVitals.js","index.js"],"names":["List","filteredtodoName","setFilteredTodoName","todoName","setTodoName","completeTodo","e","updatedTodos","map","todo","id","target","status","removeTodo","removedArr","filter","style","marginTop","bucket","display","Alert","width","variant","name","Button","onClick","marginLeft","Index","props","className","history","createBrowserHistory","Routes","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qOAsCeA,EAlCF,SAAC,GAAiE,IAAhEC,EAA+D,EAA/DA,iBAAiBC,EAA8C,EAA9CA,oBAAoBC,EAA0B,EAA1BA,SAASC,EAAiB,EAAjBA,YAErDC,EAAe,SAACC,GAChB,IAAIC,EAAeN,EAAiBO,KAAI,SAAAC,GAItC,OAHIA,EAAKC,IAAMJ,EAAEK,OAAOD,KACtBD,EAAKG,QAAUH,EAAKG,QAEfH,KAETP,EAAoBK,IAGlBM,EAAa,SAACP,GACpB,IAAMQ,EAAa,YAAIX,GAAUY,QAAO,SAAAN,GAAI,OAAIA,EAAKC,IAAMJ,EAAEK,OAAOD,MACpEN,EAAYU,IAId,OACE,qBAAKE,MAAO,CAACC,UAAU,MAAvB,SACGhB,EAAiBO,KAAI,SAACU,GAAD,OAAW,sBAAKF,MAAO,CAACG,QAAQ,OAAOF,UAAU,MAAtC,UAC/B,cAACG,EAAA,EAAD,CAAiBJ,MAAO,CAACK,MAAM,OAAQC,QAAwB,GAAfJ,EAAON,OAAU,UAAU,SAA3E,SACKM,EAAOK,MADA,KAGZ,cAACC,EAAA,EAAD,CAAQd,GAAIQ,EAAOR,GAAIY,QAAwB,GAAfJ,EAAON,OAAU,SAAS,UAAWa,QAASpB,EAAcW,MAAO,CAACU,WAAW,MAA/G,SAAsI,GAAfR,EAAON,OAAU,aAAa,aAErJ,cAACY,EAAA,EAAD,CAAQF,QAAQ,SAASZ,GAAIQ,EAAOR,GAAKe,QAASZ,EAAYG,MAAO,CAACU,WAAW,MAAjF,6BCdOC,G,kBAXD,SAACC,GACf,OACI,qBAAKC,UAAU,YAAf,SACI,gD,OCNKC,EAAUC,cCuBNC,EAhBF,WACb,OACI,cAAC,IAAD,CAAQF,QAASA,EAAjB,SACE,8BAEE,qBAAKD,UAAU,iBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAM,IAAKC,UAAWR,IACnC,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAM,QAASC,UAAWnC,cCDtCoC,EATH,WAEV,OACI,cAAC,EAAD,KCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.60e5fd59.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { InputGroup,FormControl,Button,Alert } from 'react-bootstrap';\r\n\r\n\r\nconst List = ({filteredtodoName,setFilteredTodoName,todoName,setTodoName}) => {\r\n  \r\n  const completeTodo = (e) => {\r\n        let updatedTodos = filteredtodoName.map(todo => {\r\n          if (todo.id == e.target.id) {\r\n            todo.status = !todo.status;\r\n          }\r\n          return todo;\r\n        });\r\n        setFilteredTodoName(updatedTodos);\r\n      };\r\n    \r\n    const removeTodo = (e) => {\r\n    const removedArr = [...todoName].filter(todo => todo.id != e.target.id );\r\n    setTodoName(removedArr);\r\n    \r\n  };\r\n\r\n  return (\r\n    <div style={{marginTop:\"6%\"}}>\r\n      {filteredtodoName.map((bucket)=>(<div style={{display:\"flex\",marginTop:\"2%\"}}>\r\n        <Alert key={\"1\"} style={{width:\"50%\"}} variant={bucket.status==1?\"success\":\"danger\"}>\r\n            {bucket.name}\r\n        </Alert>\r\n        <Button id={bucket.id} variant={bucket.status==1?\"danger\":\"success\"} onClick={completeTodo} style={{marginLeft:\"2%\"}}>{bucket.status==1?\"Incomplete\":\"Complete\"}\r\n        </Button>\r\n        <Button variant=\"danger\" id={bucket.id}  onClick={removeTodo} style={{marginLeft:\"2%\"}}>\r\n            Delete\r\n        </Button>\r\n    </div>))} \r\n  </div>\r\n  );\r\n};\r\n\r\nexport default List;","import React,{useState,useEffect} from \"react\";\r\nimport { InputGroup,FormControl,Button,Alert } from 'react-bootstrap';\r\nimport Todos from './List'\r\nimport Form from './Form'\r\n\r\nconst Index = (props) => {\r\nreturn (\r\n    <div className=\"col-md-12\">\r\n        <h1>To-Do List</h1>\r\n        \r\n        {/* <Form/> */}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();","import React, { useState, useEffect } from \"react\";\r\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\nimport Index from \"../components/Index\";\r\nimport List from \"../components/List\";\r\nimport { history } from \"../helpers/history\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n      <Router history={history}>\r\n        <div>\r\n  \r\n          <div className=\"container mt-4\">\r\n            <Switch>\r\n              <Route exact path={\"/\"} component={Index} />\r\n              <Route exact path={\"/List\"} component={List} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  };\r\n\r\n  export default Routes;","import React, { useState, useEffect } from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Routes from './routes/routes'\n\n\nconst App = () => {\n\n  return (\n      <Routes /> \n  )\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
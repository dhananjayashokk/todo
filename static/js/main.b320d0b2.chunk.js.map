{"version":3,"sources":["components/List.js","components/Form.js","components/Index.js","helpers/history.js","routes/routes.js","App.js","reportWebVitals.js","index.js"],"names":["List","filteredtodoName","setFilteredTodoName","todoName","setTodoName","completeTodo","e","updatedTodos","map","todo","id","target","status","removeTodo","removedArr","filter","style","marginTop","bucket","display","Alert","width","variant","name","Button","onClick","marginLeft","Form","props","useEffect","getLocalData","getLocalTodos","useState","bucketName","setBucketName","inputBucketText","setInputBucketText","selectedBucket","setSelectedBucket","inputTodoText","setInputTodoText","console","log","localStorage","setItem","JSON","stringify","filteredTodos","getItem","parse","className","margin","InputGroup","size","FormControl","value","onChange","aria-label","aria-describedby","parseInt","Math","random","length","as","custom","disabled","Index","history","createBrowserHistory","Routes","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b320d0b2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { InputGroup,FormControl,Button,Alert } from 'react-bootstrap';\r\n\r\n\r\nconst List = ({filteredtodoName,setFilteredTodoName,todoName,setTodoName}) => {\r\n  \r\n  const completeTodo = (e) => {\r\n        let updatedTodos = filteredtodoName.map(todo => {\r\n          if (todo.id == e.target.id) {\r\n            todo.status = !todo.status;\r\n          }\r\n          return todo;\r\n        });\r\n        setFilteredTodoName(updatedTodos);\r\n      };\r\n    \r\n    const removeTodo = (e) => {\r\n    const removedArr = [...todoName].filter(todo => todo.id != e.target.id );\r\n    setTodoName(removedArr);\r\n    \r\n  };\r\n\r\n  return (\r\n    <div style={{marginTop:\"6%\"}}>\r\n      {filteredtodoName.map((bucket)=>(<div style={{display:\"flex\",marginTop:\"2%\"}}>\r\n        <Alert key={\"1\"} style={{width:\"50%\"}} variant={bucket.status==1?\"success\":\"danger\"}>\r\n            {bucket.name}\r\n        </Alert>\r\n        <Button id={bucket.id} variant={bucket.status==1?\"danger\":\"success\"} onClick={completeTodo} style={{marginLeft:\"2%\"}}>{bucket.status==1?\"Incomplete\":\"Complete\"}\r\n        </Button>\r\n        <Button variant=\"danger\" id={bucket.id}  onClick={removeTodo} style={{marginLeft:\"2%\"}}>\r\n            Delete\r\n        </Button>\r\n    </div>))} \r\n  </div>\r\n  );\r\n};\r\n\r\nexport default List;","import React,{useState,useEffect} from \"react\";\r\nimport { InputGroup,FormControl,Button,Alert } from 'react-bootstrap';\r\nimport Todos from './List'\r\n\r\nconst Form = (props) => {\r\n    useEffect(()=>{\r\n        getLocalData()\r\n        getLocalTodos()\r\n    },[])\r\n    const[bucketName,setBucketName]=useState([])\r\n    const[inputBucketText,setInputBucketText]=useState(\"\")\r\n    const[selectedBucket,setSelectedBucket]=useState(\"\")\r\n    const[todoName,setTodoName]=useState([])\r\n    const[filteredtodoName,setFilteredTodoName]=useState([])\r\n    const[inputTodoText,setInputTodoText]=useState(\"\")\r\n    const inputBucketTextHandler=(e)=>{\r\n        setInputBucketText(e.target.value)\r\n    }\r\n    const bucketTextHandler=(e)=>{\r\n        setBucketName([...bucketName,{id:parseInt(Math.random()*1000) ,\"name\":inputBucketText}])\r\n        if(bucketName.length < 1 ){\r\n            setSelectedBucket(inputBucketText)\r\n        }\r\n        setInputBucketText(\"\")\r\n    }\r\n\r\n    const selectedBucketChangeHandler=(e)=>{\r\n        console.log(\"changed\")\r\n        setSelectedBucket(e.target.value)\r\n    }\r\n\r\n   useEffect(() => {\r\n       console.log(\"bucketname:\",typeof(bucketName))\r\n        localStorage.setItem(\"buckets\", JSON.stringify(bucketName))\r\n      }, [bucketName]);\r\n    \r\n    useEffect(() => {\r\n        console.log(\"called\",selectedBucket)\r\n        const filteredTodos = [...todoName].filter(todo => todo.bucket == selectedBucket);\r\n        console.log(\"filtered todos\",filteredTodos)\r\n        setFilteredTodoName(filteredTodos);\r\n      }, [selectedBucket]);\r\n\r\n    const inputTodoTextHandler=(e)=>{\r\n        setInputTodoText(e.target.value)\r\n    }\r\n    const todoTextHandler=(e)=>{\r\n        setTodoName([...todoName,{id:parseInt(Math.random()*1000) ,\"name\":inputTodoText,\"bucket\":selectedBucket,\"status\":0}])\r\n        setFilteredTodoName([...filteredtodoName,{id:parseInt(Math.random()*1000) ,\"name\":inputTodoText,\"bucket\":selectedBucket,\"status\":0}])\r\n        setInputTodoText(\"\")\r\n    }\r\n\r\n    useEffect(() => {\r\n         localStorage.setItem(\"todos\", JSON.stringify(todoName))\r\n         console.log(\"todoname\",todoName)\r\n         const removedArr = [...todoName].filter(todo => todo.bucket == selectedBucket);\r\n         setFilteredTodoName(removedArr);\r\n       }, [todoName]);\r\n  \r\n\r\n    const getLocalData=(e)=>{\r\n        if(localStorage.getItem(\"buckets\")==null){\r\n            console.log(\"null bucker\")\r\n            setBucketName([])\r\n        }\r\n        else{\r\n            console.log(\"not null bucker\",JSON.parse(localStorage.getItem(\"buckets\"))[0].name)\r\n            setBucketName(JSON.parse(localStorage.getItem(\"buckets\")))\r\n            setSelectedBucket(JSON.parse(localStorage.getItem(\"buckets\"))[0].name)\r\n        }\r\n    }\r\n\r\n    const getLocalTodos=(e)=>{\r\n        if(localStorage.getItem(\"todos\")==null){\r\n            setTodoName([])\r\n        }\r\n        else{\r\n            setTodoName(JSON.parse(localStorage.getItem(\"todos\")))\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n        <div style={{width:\"50%\",margin:\"2%\"}}>\r\n        <InputGroup size=\"sm\" className=\"mb-2\">\r\n            <FormControl value={inputBucketText} onChange={inputBucketTextHandler}  style={{marginLeft:\"2%\"}} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n            <Button variant=\"warning\" onClick={bucketTextHandler} style={{marginLeft:\"2%\"}}>Add Bucket</Button>\r\n        </InputGroup>\r\n        \r\n        </div>\r\n      <div style={{width:\"50%\",margin:\"2%\"}}>\r\n          \r\n        <InputGroup size=\"sm\" className=\"mb-2\">\r\n        <FormControl as=\"select\" onChange={selectedBucketChangeHandler} custom>\r\n            <option disabled >---Select Bucket---</option>\r\n            {bucketName.map((bucket)=>(<option key={bucket.id} id={bucket.id}>{bucket.name}</option>))}\r\n        </FormControl>\r\n            <FormControl value={inputTodoText} onChange={inputTodoTextHandler} style={{marginLeft:\"2%\"}} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n            <Button variant=\"warning\" onClick={todoTextHandler} style={{marginLeft:\"2%\"}}>Add To Do</Button>\r\n        </InputGroup>\r\n        \r\n        </div>\r\n\r\n        <Todos filteredtodoName={filteredtodoName} setFilteredTodoName={setFilteredTodoName} todoName={todoName} setTodoName={setTodoName}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;","import React,{useState,useEffect} from \"react\";\r\nimport { InputGroup,FormControl,Button,Alert } from 'react-bootstrap';\r\nimport Todos from './List'\r\nimport Form from './Form'\r\n\r\nconst Index = (props) => {\r\nreturn (\r\n    <div className=\"col-md-12\">\r\n        <h1>To-Do List</h1>\r\n        \r\n        <Form/>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();","import React, { useState, useEffect } from \"react\";\r\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.css\";\r\nimport Index from \"../components/Index\";\r\nimport List from \"../components/List\";\r\nimport { history } from \"../helpers/history\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n      <Router history={history}>\r\n        <div>\r\n  \r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={\"/\"} component={Index} />\r\n              <Route exact path={\"/List\"} component={List} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  };\r\n\r\n  export default Routes;","import React, { useState, useEffect } from \"react\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Routes from './routes/routes'\n\n\nconst App = () => {\n\n  return (\n      <Routes /> \n  )\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}